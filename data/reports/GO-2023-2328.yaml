id: GO-2023-2328
modules:
    - module: github.com/go-resty/resty/v2
      versions:
        - introduced: 2.10.0
          fixed: 2.11.0
      vulnerable_at: 2.10.0
      packages:
        - package: github.com/go-resty/resty/v2
          symbols:
            - handleRequestBody
          derived_symbols:
            - Backoff
            - Request.Delete
            - Request.Execute
            - Request.Get
            - Request.Head
            - Request.Options
            - Request.Patch
            - Request.Post
            - Request.Put
            - Request.Send
summary: HTTP request body disclosure in github.com/go-resty/resty/v2
description: |-
    A race condition in go-resty can result in HTTP request body disclosure across
    requests.

    This condition can be triggered by calling sync.Pool.Put with the same
    *bytes.Buffer more than once, when request retries are enabled and a retry
    occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't
    had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP
    request body from an unrelated request, and go-resty will append the current
    HTTP request body to it, sending two bodies in one request.

    The sync.Pool in question is defined at package level scope, so a completely
    unrelated server could receive the request body.
ghsas:
    - GHSA-xwh9-gc39-5298
credits:
    - Logan Attwood (@lattwood)
references:
    - report: https://github.com/go-resty/resty/issues/743
    - report: https://github.com/go-resty/resty/issues/739
    - fix: https://github.com/go-resty/resty/pull/745
    - fix: https://github.com/go-resty/resty/commit/577fed8730d79f583eb48dfc81674164e1fc471e
cve_metadata:
    id: CVE-2023-45286
    cwe: 'CWE-200: Exposure of Sensitive Information to an Unauthorized Actor'
