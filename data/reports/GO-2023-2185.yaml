id: GO-2023-2185
modules:
    - module: std
      versions:
        - fixed: 1.20.11
        - introduced: 1.21.0-0
          fixed: 1.21.4
      vulnerable_at: 1.21.3
      packages:
        - package: path/filepath
          goos:
            - windows
          symbols:
            - Clean
            - volumeNameLen
            - join
          derived_symbols:
            - Abs
            - Base
            - Dir
            - EvalSymlinks
            - Glob
            - IsLocal
            - Join
            - Rel
            - Split
            - VolumeName
            - Walk
            - WalkDir
        - package: internal/safefilepath
          goos:
            - windows
          symbols:
            - fromFS
          derived_symbols:
            - FromFS
summary: Insecure parsing of Windows paths with a \??\ prefix in path/filepath
description: |-
    The filepath package does not recognize paths with a \??\ prefix as special.

    On Windows, a path beginning with \??\ is a Root Local Device path equivalent to
    a path beginning with \\?\. Paths with a \??\ prefix may be used to access
    arbitrary locations on the system. For example, the path \??\c:\x is equivalent
    to the more common path c:\x.

    Before fix, Clean could convert a rooted path such as \a\..\??\b into the root
    local device path \??\b. Clean will now convert this to .\??\b.

    Similarly, Join(\, ??, b) could convert a seemingly innocent sequence of path
    elements into the root local device path \??\b. Join will now convert this to
    \.\??\b.

    In addition, with fix, IsAbs now correctly reports paths beginning with \??\ as
    absolute, and VolumeName correctly reports the \??\ prefix as a volume name.
references:
    - report: https://go.dev/issue/63713
    - fix: https://go.dev/cl/540277
    - web: https://groups.google.com/g/golang-announce/c/4tU8LZfBFkY
cve_metadata:
    id: CVE-2023-45283
    cwe: 'CWE-41: Improper Resolution of Path Equivalence'
